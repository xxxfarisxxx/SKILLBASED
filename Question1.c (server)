#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main() {

    int sockfd, new_sock, port = 8000;
    char buffer[256];


    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    struct sockaddr_in serv_addr = {AF_INET, htons(port), INADDR_ANY};
    printf("[*] Socket created \n");


    bind(sockfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr));
    printf("[*] Socket bind to port: %d \n", port);


    listen(sockfd, 5);
    printf("[*] Waiting\n");

    while(1) {

            struct sockaddr_in cli_addr;
            socklen_t clilen = sizeof(cli_addr);


            new_sock = accept(sockfd, (struct sockaddr *) &cli_addr, &clilen);
            if (new_sock < 0) {
                printf("[!!!] Error\n");
                return -1;
            }
            else {
                printf("[*] Accepted \n");
            }


            int random_number = rand() % 900 + 100;
            printf("[*] Random number has been sent\n");


            sprintf(buffer, "%d", random_number);


            write(new_sock, buffer, strlen(buffer));
            printf("[*] Packet Sent \n");

            close(new_sock);
            printf("[*] Connection Closed\n\n");

    }

    close(sockfd);

}
